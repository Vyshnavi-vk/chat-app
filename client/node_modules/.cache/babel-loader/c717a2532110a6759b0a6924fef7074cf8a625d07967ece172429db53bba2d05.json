{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\OneDrive\\\\Desktop\\\\Real time chat app\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import { useState, useEffect } from 'react';\n// import queryString from 'query-string';\n// import io from 'socket.io-client';\n// import './Chat.css';\n// import InfoBar from '../InfoBar/InfoBar';\n// import Input from '../Input/Input';\n// import Messages from '../Messages/Messages';\n// import TextContainer from '../TextContainer/TextContainer';\n\n// let socket;\n\n// const Chat = ({ location }) => {\n//   const [name, setName] = useState('');\n//   const [room, setRoom] = useState('');\n//   const [message, setMessage] = useState('');\n//   const [messages, setMessages] = useState([]);\n//   const [users, setUsers] = useState('');\n//   const ENDPOINT = 'localhost:5000';\n\n//   useEffect(() => {\n//     const {name, room} = queryString.parse(window.location.search);\n\n//    socket = io('localhost:5000');\n\n//     setName(name);\n//     setRoom(room);\n\n//     socket.emit('join', { name, room}, () => {\n\n//     });\n\n//     return () => {\n//       socket.emit('disconnect');\n//       socket.off();\n//     }\n\n//   },[ENDPOINT, window.location.search]);\n\n//   useEffect(() => {\n//     socket.once(\"message\", (message) => {\n//       setMessages([...messages, message]);\n//     });\n//     // socket.on(\"roomData\", ({ users }) => {\n//     //   setUsers(users);\n//     // });\n//   }, [messages]);\n\n//     const sendMessage = (event) => {\n//         event.preventDefault();\n\n//         if(message) {\n//           socket.emit('sendMessage', message, () => setMessage(''));\n//         }\n//     }\n\n//     console.log(message, messages);\n\n//   return (\n//     <div className='outerContainer'>\n//       <div className='container'>\n//         <InfoBar room = {room}/>\n//         <Messages messages={messages} name={name}/>\n//         <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n//       </div>\n//       <TextContainer users={users}/>\n//     </div>\n//   )\n// }\n\n// export default Chat;\n\nimport React, { useState, useEffect } from \"react\";\nimport queryString from 'query-string';\nimport io from \"socket.io-client\";\nimport TextContainer from '../TextContainer/TextContainer';\nimport Messages from '../Messages/Messages';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = 'localhost:5000';\nlet socket;\nconst Chat = _ref => {\n  _s();\n  let {\n    location\n  } = _ref;\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState([]);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(window.location.search);\n    socket = io(ENDPOINT);\n    setRoom(room);\n    setName(name);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, window.location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages(messages => [...messages, message]);\n    });\n    socket.on(\"roomData\", _ref2 => {\n      let {\n        users\n      } = _ref2;\n      setUsers(users);\n    });\n  }, [messages]);\n  const sendMessage = event => {\n    event.preventDefault();\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        messages: messages,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        message: message,\n        setMessage: setMessage,\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"bKqCww7HeEamQgcEfoZ0NW82BkA=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","queryString","io","TextContainer","Messages","InfoBar","Input","jsxDEV","_jsxDEV","ENDPOINT","socket","Chat","_ref","_s","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","parse","window","search","emit","error","alert","on","_ref2","sendMessage","event","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/OneDrive/Desktop/Real time chat app/client/src/components/Chat/Chat.js"],"sourcesContent":["// import React from 'react';\r\n// import { useState, useEffect } from 'react';\r\n// import queryString from 'query-string';\r\n// import io from 'socket.io-client';\r\n// import './Chat.css';\r\n// import InfoBar from '../InfoBar/InfoBar';\r\n// import Input from '../Input/Input';\r\n// import Messages from '../Messages/Messages';\r\n// import TextContainer from '../TextContainer/TextContainer';\r\n\r\n\r\n// let socket;\r\n\r\n// const Chat = ({ location }) => {\r\n//   const [name, setName] = useState('');\r\n//   const [room, setRoom] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n//   const [messages, setMessages] = useState([]);\r\n//   const [users, setUsers] = useState('');\r\n//   const ENDPOINT = 'localhost:5000';\r\n\r\n//   useEffect(() => {\r\n//     const {name, room} = queryString.parse(window.location.search);\r\n    \r\n//    socket = io('localhost:5000');\r\n    \r\n//     setName(name);\r\n//     setRoom(room);\r\n\r\n//     socket.emit('join', { name, room}, () => {\r\n     \r\n//     });\r\n\r\n//     return () => {\r\n//       socket.emit('disconnect');\r\n//       socket.off();\r\n//     }\r\n\r\n//   },[ENDPOINT, window.location.search]);\r\n\r\n  \r\n//   useEffect(() => {\r\n//     socket.once(\"message\", (message) => {\r\n//       setMessages([...messages, message]);\r\n//     });\r\n//     // socket.on(\"roomData\", ({ users }) => {\r\n//     //   setUsers(users);\r\n//     // });\r\n//   }, [messages]);\r\n\r\n//     const sendMessage = (event) => {\r\n//         event.preventDefault();\r\n\r\n//         if(message) {\r\n//           socket.emit('sendMessage', message, () => setMessage(''));\r\n//         }\r\n//     }\r\n\r\n//     console.log(message, messages);\r\n\r\n\r\n//   return (\r\n//     <div className='outerContainer'>\r\n//       <div className='container'>\r\n//         <InfoBar room = {room}/>\r\n//         <Messages messages={messages} name={name}/>\r\n//         <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n//       </div>\r\n//       <TextContainer users={users}/>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Chat;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport queryString from 'query-string';\r\nimport io from \"socket.io-client\";\r\n\r\nimport TextContainer from '../TextContainer/TextContainer';\r\nimport Messages from '../Messages/Messages';\r\nimport InfoBar from '../InfoBar/InfoBar';\r\nimport Input from '../Input/Input';\r\n\r\nimport './Chat.css';\r\n\r\nconst ENDPOINT = 'localhost:5000';\r\n\r\nlet socket;\r\n\r\nconst Chat = ({ location }) => {\r\n  const [name, setName] = useState('');\r\n  const [room, setRoom] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const { name, room } = queryString.parse(window.location.search);\r\n\r\n    socket = io(ENDPOINT);\r\n\r\n    setRoom(room);\r\n    setName(name)\r\n\r\n    socket.emit('join', { name, room }, (error) => {\r\n      if(error) {\r\n        alert(error);\r\n      }\r\n    });\r\n  }, [ENDPOINT, window.location.search]);\r\n  \r\n  useEffect(() => {\r\n    socket.on('message', message => {\r\n      setMessages(messages => [ ...messages, message ]);\r\n    });\r\n    \r\n    socket.on(\"roomData\", ({ users }) => {\r\n      setUsers(users);\r\n    });\r\n}, [messages]);\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n\r\n    if(message) {\r\n      socket.emit('sendMessage', message, () => setMessage(''));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"outerContainer\">\r\n      <div className=\"container\">\r\n          <InfoBar room={room} />\r\n          <Messages messages={messages} name={name} />\r\n          <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n      </div>\r\n      <TextContainer users={users}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}