{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\OneDrive\\\\Desktop\\\\Real time chat app\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import queryString from 'query-string';\n// import io from \"socket.io-client\";\n\n// let socket;\n\n// const Chat = ({ location }) => {\n//   const [name, setName] = useState('');\n//   const [room, setRoom] = useState('');\n//   const ENDPOINT = 'localhost:5000';\n\n//   useEffect(() => {\n//     const { name, room } = queryString.parse(window.location.search);\n\n//     socket = io('ENDPOINT');\n//     setName(name);\n//     setRoom(room);\n//     console.log(socket);\n//   }, [ENDPOINT, window.location.search]);\n\n//   return (\n//     // <div className=\"outerContainer\">\n//     //   <div className=\"container\">\n//     //       <InfoBar room={room} />\n//     //       <Messages messages={messages} name={name} />\n//     //       <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n//     //   </div>\n//     //   <TextContainer users={users}/>\n//     // </div>\n//     <h1>Chat</h1>\n//   );\n// }\n\n// export default Chat;\n\nimport React, { useState, useEffect } from \"react\";\nimport queryString from 'query-string';\nimport io from \"socket.io-client\";\n\n// import TextContainer from '../TextContainer/TextContainer';\n// import Messages from '../Messages/Messages';\n// import InfoBar from '../InfoBar/InfoBar';\n// import Input from '../Input/Input';\n\n// import './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = 'https://project-chat-application.herokuapp.com/';\nlet socket;\nconst Chat = _ref => {\n  _s();\n  let {\n    location\n  } = _ref;\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setRoom(room);\n    setName(name);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        messages: messages,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        message: message,\n        setMessage: setMessage,\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"l91B7p7ZJ1nW3HIdewCawII8m7E=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","queryString","io","jsxDEV","_jsxDEV","ENDPOINT","socket","Chat","_ref","_s","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","parse","search","emit","error","alert","className","children","InfoBar","fileName","_jsxFileName","lineNumber","columnNumber","Messages","Input","sendMessage","TextContainer","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/OneDrive/Desktop/Real time chat app/client/src/components/Chat/Chat.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import queryString from 'query-string';\r\n// import io from \"socket.io-client\";\r\n\r\n\r\n// let socket;\r\n\r\n\r\n\r\n// const Chat = ({ location }) => {\r\n//   const [name, setName] = useState('');\r\n//   const [room, setRoom] = useState('');\r\n//   const ENDPOINT = 'localhost:5000';\r\n\r\n  \r\n//   useEffect(() => {\r\n//     const { name, room } = queryString.parse(window.location.search);\r\n    \r\n//     socket = io('ENDPOINT');\r\n//     setName(name);\r\n//     setRoom(room);\r\n//     console.log(socket);\r\n//   }, [ENDPOINT, window.location.search]);\r\n  \r\n \r\n \r\n\r\n//   return (\r\n//     // <div className=\"outerContainer\">\r\n//     //   <div className=\"container\">\r\n//     //       <InfoBar room={room} />\r\n//     //       <Messages messages={messages} name={name} />\r\n//     //       <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n//     //   </div>\r\n//     //   <TextContainer users={users}/>\r\n//     // </div>\r\n//     <h1>Chat</h1>\r\n//   );\r\n// }\r\n\r\n// export default Chat;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport queryString from 'query-string';\r\nimport io from \"socket.io-client\";\r\n\r\n// import TextContainer from '../TextContainer/TextContainer';\r\n// import Messages from '../Messages/Messages';\r\n// import InfoBar from '../InfoBar/InfoBar';\r\n// import Input from '../Input/Input';\r\n\r\n// import './Chat.css';\r\n\r\nconst ENDPOINT = 'https://project-chat-application.herokuapp.com/';\r\n\r\nlet socket;\r\n\r\nconst Chat = ({ location }) => {\r\n  const [name, setName] = useState('');\r\n  const [room, setRoom] = useState('');\r\n  const [users, setUsers] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const { name, room } = queryString.parse(location.search);\r\n\r\n    socket = io(ENDPOINT);\r\n\r\n    setRoom(room);\r\n    setName(name)\r\n\r\n    socket.emit('join', { name, room }, (error) => {\r\n      if(error) {\r\n        alert(error);\r\n      }\r\n    });\r\n  }, [ENDPOINT, location.search]);\r\n  \r\n \r\n  \r\n\r\n  return (\r\n    <div className=\"outerContainer\">\r\n      <div className=\"container\">\r\n          <InfoBar room={room} />\r\n          <Messages messages={messages} name={name} />\r\n          <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n      </div>\r\n      <TextContainer users={users}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;"],"mappings":";;AAAA;AACA;AACA;;AAGA;;AAIA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,EAAE,MAAM,kBAAkB;;AAEjC;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,QAAQ,GAAG,iDAAiD;AAElE,IAAIC,MAAM;AAEV,MAAMC,IAAI,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACxB,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAM;MAAEW,IAAI;MAAEE;IAAK,CAAC,GAAGZ,WAAW,CAACoB,KAAK,CAACX,QAAQ,CAACY,MAAM,CAAC;IAEzDhB,MAAM,GAAGJ,EAAE,CAACG,QAAQ,CAAC;IAErBS,OAAO,CAACD,IAAI,CAAC;IACbD,OAAO,CAACD,IAAI,CAAC;IAEbL,MAAM,CAACiB,IAAI,CAAC,MAAM,EAAE;MAAEZ,IAAI;MAAEE;IAAK,CAAC,EAAGW,KAAK,IAAK;MAC7C,IAAGA,KAAK,EAAE;QACRC,KAAK,CAACD,KAAK,CAAC;MACd;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACnB,QAAQ,EAAEK,QAAQ,CAACY,MAAM,CAAC,CAAC;EAK/B,oBACElB,OAAA;IAAKsB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BvB,OAAA;MAAKsB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtBvB,OAAA,CAACwB,OAAO;QAACf,IAAI,EAAEA;MAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACvB5B,OAAA,CAAC6B,QAAQ;QAACd,QAAQ,EAAEA,QAAS;QAACR,IAAI,EAAEA;MAAK;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC5C5B,OAAA,CAAC8B,KAAK;QAACjB,OAAO,EAAEA,OAAQ;QAACC,UAAU,EAAEA,UAAW;QAACiB,WAAW,EAAEA;MAAY;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3E,eACN5B,OAAA,CAACgC,aAAa;MAACrB,KAAK,EAAEA;IAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC1B;AAEV,CAAC;AAAAvB,EAAA,CAnCKF,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AAqCV,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}